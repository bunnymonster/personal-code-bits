public class Problem012 {
	
	/*The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

    1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

    Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.

    What is the value of the first triangle number to have over five hundred divisors?*/
    public static void main(String[] args) {
        
        //First triangle number is 1
        long triangleNumber = 1;
        long increment = 2;
        
        //loop until countDivisors > 500
        while(countDivisors(triangleNumber) < 500) {
            triangleNumber += increment;
            increment++;
        }
        System.out.println(triangleNumber);
    }

    //Loop until sqrt(n) and add 2 for each pair of factors.
    public static long countDivisors(long n) {
        
        long count = 0;
        long end = (long)Math.sqrt(n);
        for(int i = 1; i < end; i++) {
            if(n % i == 0) {
                count += 2;
            }
        }
        //if n is a perfect square, subtract 1 as we overcounted.
        if(end * end == n) {
            count--;
        }
        return count;
    }
}